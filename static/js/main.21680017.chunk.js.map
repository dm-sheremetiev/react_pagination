{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPaginationPages","Math","ceil","totalPaginationArray","handleClick","item","className","classNames","disabled","href","onClick","map","active","items","App","useState","setPerPage","setCurrentPage","leftItemsLimit","rightItemsLimit","length","id","value","onChange","e","target","htmlFor","page","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAuBC,KAAKC,KAAKN,EAAQC,GACzCM,EAAuBd,EAAW,EAAGW,GAErCI,EAAc,SAACC,GACfA,IAASP,GACXC,EAAaM,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMX,GACV,gBAA+B,IAAhBA,GAAqB,OACpCY,QAAS,WACPN,EAAYN,EAAc,IAN9B,oBAaDK,EAAqBQ,KAAI,SAAAN,GAAI,OAC5B,oBAEEC,UAAWC,IAAW,YACpB,CACEK,OAAQP,IAASP,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,WACPN,EAAYC,IALhB,SAQGA,KAdEA,MAmBT,oBACEC,UAAWC,IAAW,aAAc,CAClCC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMX,GACV,gBAAeA,IAAgBE,GAAwB,OACvDU,QAAS,WACPN,EAAYN,EAAc,IAN9B,wBCjEFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KAMMC,EAAiBrB,GAAWC,EAAc,GAC1CqB,EAAkBtB,EAAUC,EAAce,EAAMO,OAClDP,EAAMO,OACNvB,EAAUC,EAEd,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCoB,EAAiB,EADlD,cACyDC,EADzD,eAC+EN,EAAMO,OADrF,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAOzB,EACP0B,SAAU,SAACC,GACTR,GAAYQ,EAAEC,OAAOH,OACrBL,EAAe,IAPnB,UAUE,wBAAQK,MAAM,IAAd,eAEA,wBAAQA,MAAM,IAAd,eAEA,wBAAQA,MAAM,KAAd,gBAEA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOiB,EAAMO,OACbvB,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAAC4B,GACpBV,EAAeU,MAiDb,6BACGd,EAAMF,KAAI,SAAAN,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,OAEFuB,MAAMV,EAAgBC,SClEjCU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.21680017.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPaginationPages = Math.ceil(total / perPage);\n  const totalPaginationArray = getNumbers(1, totalPaginationPages);\n\n  const handleClick = (item: number) => {\n    if (item !== currentPage) {\n      onPageChange(item);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === 1 && 'true'}\n          onClick={() => {\n            handleClick(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {totalPaginationArray.map(item => (\n        <li\n          key={item}\n          className={classNames('page-item',\n            {\n              active: item === currentPage,\n            })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => {\n              handleClick(item);\n            }}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item ', {\n          disabled: currentPage === totalPaginationPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === totalPaginationPages && 'true'}\n          onClick={() => {\n            handleClick(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const leftItemsLimit = perPage * (currentPage - 1);\n  const rightItemsLimit = perPage * currentPage > items.length\n    ? items.length\n    : perPage * currentPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${leftItemsLimit + 1} - ${rightItemsLimit} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              setPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n\n            <option value=\"5\">5</option>\n\n            <option value=\"10\">10</option>\n\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\">\n            {item}\n          </li>\n        )).slice(leftItemsLimit, rightItemsLimit)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}